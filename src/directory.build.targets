<Project>

  <PropertyGroup>
    <Authors>NServiceBus Ltd</Authors>
    <Company>NServiceBus Ltd</Company>
    <PackageLicenseUrl>http://particular.net/LicenseAgreement</PackageLicenseUrl>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <Copyright>Copyright 2010-$([System.DateTime]::UtcNow.ToString(yyyy)) NServiceBus. All rights reserved</Copyright>
    <PackageTags>composition apigateway ui servicebus msmq cqrs publish subscribe</PackageTags>
    <PackageIconUrl>http://s3.amazonaws.com/nuget.images/NServiceBus_32.png</PackageIconUrl>
    <PackageProjectUrl>https://docs.particular.net/nuget/$(PackageId)</PackageProjectUrl>
    <PackageOutputPath>..\..\nugets</PackageOutputPath>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);IncludePDBsInPackage</TargetsForTfmSpecificContentInPackage>
	<TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
  </PropertyGroup>

  <Target Name="IncludePDBsInPackage" Condition="'$(IncludeBuildOutput)' != 'false'">
    <ItemGroup>
      <TfmSpecificPackageFile Include="$(OutputPath)\$(AssemblyName).pdb" PackagePath="lib/$(TargetFramework)" />
    </ItemGroup>
  </Target>
  
  <!-- This is a temp workaround to get dependant assemblies included in the nuget file -->
  <!-- https://github.com/NuGet/Home/issues/3891 -->
  <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="ResolveReferences">
    <ItemGroup>
      <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths->WithMetadataValue('ReferenceSourceTarget', 'ProjectReference'))" />
    </ItemGroup>
  </Target>

</Project>